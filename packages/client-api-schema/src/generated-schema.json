Unknown Syntax Error: Command not found; did you mean one of:

  0. yarn --welcome
  1. yarn cache clean [--mirror] [--all]
  2. yarn config get [--json] [--no-redacted] <name>
  3. yarn config set [--json] [-H,--home] <name> <value>
  4. yarn set resolution [-s,--save] <descriptor> <resolution>
  5. yarn set version from sources [--path #0] [--repository #0] [--branch #0] [--plugin #0] [--no-minify] [-f,--force]
  6. yarn set version [--only-if-needed] <version>
  7. yarn set version [--only-if-needed] <version>
  8. yarn workspaces list [-v,--verbose] [--json]
  9. yarn --clipanion=definitions
 10. yarn -h
 11. yarn -h
 12. yarn -h
 13. yarn <leadingArgument> ...
 14. yarn --version
 15. yarn --version
 16. yarn add [--json] [-E,--exact] [-T,--tilde] [-C,--caret] [-D,--dev] [-P,--peer] [-O,--optional] [--prefer-dev] [-i,--interactive] [--cached] ...
 17. yarn bin [-v,--verbose] [--json] [name]
 18. yarn config [-v,--verbose] [--why] [--json]
 19. yarn dedupe [-s,--strategy #0] [-c,--check] [--json] ...
 20. yarn exec <commandName> ...
 21. yarn install [--json] [--immutable] [--immutable-cache] [--check-cache] [--inline-builds]
 22. yarn link [-A,--all] [-p,--private] [-r,--relative] <destination>
 23. yarn node ...
 24. yarn plugin import from sources [--path #0] [--repository #0] [--branch #0] [--no-minify] [-f,--force] <name>
 25. yarn plugin import <name>
 26. yarn plugin remove <name>
 27. yarn plugin list [--json]
 28. yarn plugin runtime [--json]
 29. yarn rebuild ...
 30. yarn remove [-A,--all] ...
 31. yarn run
 32. yarn up [-i,--interactive] [-v,--verbose] [-E,--exact] [-T,--tilde] [-C,--caret] ...
 33. yarn why [-R,--recursive] [--peers] <package>
 34. yarn workspace <workspaceName> <commandName> ...
 35. yarn create [-p,--package #0] [-q,--quiet] <command> ...
 36. yarn dlx [-p,--package #0] [-q,--quiet] <command> ...
 37. yarn init [-p,--private] [-w,--workspace] [-i,--install]
 38. yarn npm info [-f,--fields #0] [--json] ...
 39. yarn npm login [-s,--scope #0] [--publish]
 40. yarn npm logout [-s,--scope #0] [--publish] [-A,--all]
 41. yarn npm publish [--access #0] [--tag #0] [--tolerate-republish]
 42. yarn npm whoami [-s,--scope #0] [--publish]
 43. yarn pack [--install-if-needed] [-n,--dry-run] [--json] [-o,--out #0] [--filename #0]
 44. yarn patch-commit <patchFolder>
 45. yarn patch <package>
 46. yarn unplug [-A,--all] [-R,--recursive] [--json] ...

While running --silent ts-json-schema-generator --path=src/types.ts
